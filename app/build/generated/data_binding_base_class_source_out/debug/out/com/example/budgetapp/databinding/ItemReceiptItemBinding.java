// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemReceiptItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton buttonDelete;

  @NonNull
  public final MaterialButton buttonEdit;

  @NonNull
  public final TextView textDiscount;

  @NonNull
  public final TextView textProductName;

  @NonNull
  public final TextView textQuantity;

  @NonNull
  public final TextView textTotalPrice;

  @NonNull
  public final TextView textUnitPrice;

  private ItemReceiptItemBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton buttonDelete, @NonNull MaterialButton buttonEdit,
      @NonNull TextView textDiscount, @NonNull TextView textProductName,
      @NonNull TextView textQuantity, @NonNull TextView textTotalPrice,
      @NonNull TextView textUnitPrice) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.textDiscount = textDiscount;
    this.textProductName = textProductName;
    this.textQuantity = textQuantity;
    this.textTotalPrice = textTotalPrice;
    this.textUnitPrice = textUnitPrice;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemReceiptItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemReceiptItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_receipt_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemReceiptItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_delete;
      MaterialButton buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.button_edit;
      MaterialButton buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.text_discount;
      TextView textDiscount = ViewBindings.findChildViewById(rootView, id);
      if (textDiscount == null) {
        break missingId;
      }

      id = R.id.text_product_name;
      TextView textProductName = ViewBindings.findChildViewById(rootView, id);
      if (textProductName == null) {
        break missingId;
      }

      id = R.id.text_quantity;
      TextView textQuantity = ViewBindings.findChildViewById(rootView, id);
      if (textQuantity == null) {
        break missingId;
      }

      id = R.id.text_total_price;
      TextView textTotalPrice = ViewBindings.findChildViewById(rootView, id);
      if (textTotalPrice == null) {
        break missingId;
      }

      id = R.id.text_unit_price;
      TextView textUnitPrice = ViewBindings.findChildViewById(rootView, id);
      if (textUnitPrice == null) {
        break missingId;
      }

      return new ItemReceiptItemBinding((MaterialCardView) rootView, buttonDelete, buttonEdit,
          textDiscount, textProductName, textQuantity, textTotalPrice, textUnitPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

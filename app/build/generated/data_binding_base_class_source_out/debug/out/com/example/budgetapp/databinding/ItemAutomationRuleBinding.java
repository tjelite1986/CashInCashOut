// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAutomationRuleBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView cardRule;

  @NonNull
  public final SwitchMaterial switchRuleActive;

  @NonNull
  public final TextView textConfidence;

  @NonNull
  public final TextView textCreatedAt;

  @NonNull
  public final TextView textCreatedBy;

  @NonNull
  public final TextView textPriority;

  @NonNull
  public final TextView textRuleDescription;

  @NonNull
  public final TextView textRuleName;

  @NonNull
  public final TextView textUsageCount;

  private ItemAutomationRuleBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialCardView cardRule, @NonNull SwitchMaterial switchRuleActive,
      @NonNull TextView textConfidence, @NonNull TextView textCreatedAt,
      @NonNull TextView textCreatedBy, @NonNull TextView textPriority,
      @NonNull TextView textRuleDescription, @NonNull TextView textRuleName,
      @NonNull TextView textUsageCount) {
    this.rootView = rootView;
    this.cardRule = cardRule;
    this.switchRuleActive = switchRuleActive;
    this.textConfidence = textConfidence;
    this.textCreatedAt = textCreatedAt;
    this.textCreatedBy = textCreatedBy;
    this.textPriority = textPriority;
    this.textRuleDescription = textRuleDescription;
    this.textRuleName = textRuleName;
    this.textUsageCount = textUsageCount;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAutomationRuleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAutomationRuleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_automation_rule, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAutomationRuleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      MaterialCardView cardRule = (MaterialCardView) rootView;

      id = R.id.switchRuleActive;
      SwitchMaterial switchRuleActive = ViewBindings.findChildViewById(rootView, id);
      if (switchRuleActive == null) {
        break missingId;
      }

      id = R.id.textConfidence;
      TextView textConfidence = ViewBindings.findChildViewById(rootView, id);
      if (textConfidence == null) {
        break missingId;
      }

      id = R.id.textCreatedAt;
      TextView textCreatedAt = ViewBindings.findChildViewById(rootView, id);
      if (textCreatedAt == null) {
        break missingId;
      }

      id = R.id.textCreatedBy;
      TextView textCreatedBy = ViewBindings.findChildViewById(rootView, id);
      if (textCreatedBy == null) {
        break missingId;
      }

      id = R.id.textPriority;
      TextView textPriority = ViewBindings.findChildViewById(rootView, id);
      if (textPriority == null) {
        break missingId;
      }

      id = R.id.textRuleDescription;
      TextView textRuleDescription = ViewBindings.findChildViewById(rootView, id);
      if (textRuleDescription == null) {
        break missingId;
      }

      id = R.id.textRuleName;
      TextView textRuleName = ViewBindings.findChildViewById(rootView, id);
      if (textRuleName == null) {
        break missingId;
      }

      id = R.id.textUsageCount;
      TextView textUsageCount = ViewBindings.findChildViewById(rootView, id);
      if (textUsageCount == null) {
        break missingId;
      }

      return new ItemAutomationRuleBinding((MaterialCardView) rootView, cardRule, switchRuleActive,
          textConfidence, textCreatedAt, textCreatedBy, textPriority, textRuleDescription,
          textRuleName, textUsageCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNotificationSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final Button btnSelectTransactions;

  @NonNull
  public final Button btnTestNotification;

  @NonNull
  public final LinearLayout layoutDailyAlwaysTime;

  @NonNull
  public final LinearLayout layoutDailyIfNotOpenedTime;

  @NonNull
  public final Switch switch24Hours;

  @NonNull
  public final Switch switchDailyAlways;

  @NonNull
  public final Switch switchDailyIfNotOpened;

  @NonNull
  public final TextView tvDailyAlwaysTime;

  @NonNull
  public final TextView tvDailyIfNotOpenedTime;

  @NonNull
  public final TextView tvSelectedCount;

  private ActivityNotificationSettingsBinding(@NonNull ScrollView rootView,
      @NonNull ImageView btnBack, @NonNull Button btnSelectTransactions,
      @NonNull Button btnTestNotification, @NonNull LinearLayout layoutDailyAlwaysTime,
      @NonNull LinearLayout layoutDailyIfNotOpenedTime, @NonNull Switch switch24Hours,
      @NonNull Switch switchDailyAlways, @NonNull Switch switchDailyIfNotOpened,
      @NonNull TextView tvDailyAlwaysTime, @NonNull TextView tvDailyIfNotOpenedTime,
      @NonNull TextView tvSelectedCount) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnSelectTransactions = btnSelectTransactions;
    this.btnTestNotification = btnTestNotification;
    this.layoutDailyAlwaysTime = layoutDailyAlwaysTime;
    this.layoutDailyIfNotOpenedTime = layoutDailyIfNotOpenedTime;
    this.switch24Hours = switch24Hours;
    this.switchDailyAlways = switchDailyAlways;
    this.switchDailyIfNotOpened = switchDailyIfNotOpened;
    this.tvDailyAlwaysTime = tvDailyAlwaysTime;
    this.tvDailyIfNotOpenedTime = tvDailyIfNotOpenedTime;
    this.tvSelectedCount = tvSelectedCount;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notification_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnSelectTransactions;
      Button btnSelectTransactions = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectTransactions == null) {
        break missingId;
      }

      id = R.id.btnTestNotification;
      Button btnTestNotification = ViewBindings.findChildViewById(rootView, id);
      if (btnTestNotification == null) {
        break missingId;
      }

      id = R.id.layoutDailyAlwaysTime;
      LinearLayout layoutDailyAlwaysTime = ViewBindings.findChildViewById(rootView, id);
      if (layoutDailyAlwaysTime == null) {
        break missingId;
      }

      id = R.id.layoutDailyIfNotOpenedTime;
      LinearLayout layoutDailyIfNotOpenedTime = ViewBindings.findChildViewById(rootView, id);
      if (layoutDailyIfNotOpenedTime == null) {
        break missingId;
      }

      id = R.id.switch24Hours;
      Switch switch24Hours = ViewBindings.findChildViewById(rootView, id);
      if (switch24Hours == null) {
        break missingId;
      }

      id = R.id.switchDailyAlways;
      Switch switchDailyAlways = ViewBindings.findChildViewById(rootView, id);
      if (switchDailyAlways == null) {
        break missingId;
      }

      id = R.id.switchDailyIfNotOpened;
      Switch switchDailyIfNotOpened = ViewBindings.findChildViewById(rootView, id);
      if (switchDailyIfNotOpened == null) {
        break missingId;
      }

      id = R.id.tvDailyAlwaysTime;
      TextView tvDailyAlwaysTime = ViewBindings.findChildViewById(rootView, id);
      if (tvDailyAlwaysTime == null) {
        break missingId;
      }

      id = R.id.tvDailyIfNotOpenedTime;
      TextView tvDailyIfNotOpenedTime = ViewBindings.findChildViewById(rootView, id);
      if (tvDailyIfNotOpenedTime == null) {
        break missingId;
      }

      id = R.id.tvSelectedCount;
      TextView tvSelectedCount = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectedCount == null) {
        break missingId;
      }

      return new ActivityNotificationSettingsBinding((ScrollView) rootView, btnBack,
          btnSelectTransactions, btnTestNotification, layoutDailyAlwaysTime,
          layoutDailyIfNotOpenedTime, switch24Hours, switchDailyAlways, switchDailyIfNotOpened,
          tvDailyAlwaysTime, tvDailyIfNotOpenedTime, tvSelectedCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

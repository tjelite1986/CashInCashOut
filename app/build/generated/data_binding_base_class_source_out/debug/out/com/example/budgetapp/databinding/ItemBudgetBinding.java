// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBudgetBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton buttonDelete;

  @NonNull
  public final MaterialButton buttonEdit;

  @NonNull
  public final LinearProgressIndicator progressBudget;

  @NonNull
  public final TextView textBudgetAmount;

  @NonNull
  public final TextView textBudgetName;

  @NonNull
  public final TextView textCategory;

  @NonNull
  public final TextView textPeriod;

  @NonNull
  public final TextView textProgressPercentage;

  @NonNull
  public final TextView textRemainingAmount;

  @NonNull
  public final TextView textSpentAmount;

  @NonNull
  public final TextView textStatusIndicator;

  private ItemBudgetBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton buttonDelete, @NonNull MaterialButton buttonEdit,
      @NonNull LinearProgressIndicator progressBudget, @NonNull TextView textBudgetAmount,
      @NonNull TextView textBudgetName, @NonNull TextView textCategory,
      @NonNull TextView textPeriod, @NonNull TextView textProgressPercentage,
      @NonNull TextView textRemainingAmount, @NonNull TextView textSpentAmount,
      @NonNull TextView textStatusIndicator) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.progressBudget = progressBudget;
    this.textBudgetAmount = textBudgetAmount;
    this.textBudgetName = textBudgetName;
    this.textCategory = textCategory;
    this.textPeriod = textPeriod;
    this.textProgressPercentage = textProgressPercentage;
    this.textRemainingAmount = textRemainingAmount;
    this.textSpentAmount = textSpentAmount;
    this.textStatusIndicator = textStatusIndicator;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBudgetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBudgetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_budget, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBudgetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_delete;
      MaterialButton buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.button_edit;
      MaterialButton buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.progress_budget;
      LinearProgressIndicator progressBudget = ViewBindings.findChildViewById(rootView, id);
      if (progressBudget == null) {
        break missingId;
      }

      id = R.id.text_budget_amount;
      TextView textBudgetAmount = ViewBindings.findChildViewById(rootView, id);
      if (textBudgetAmount == null) {
        break missingId;
      }

      id = R.id.text_budget_name;
      TextView textBudgetName = ViewBindings.findChildViewById(rootView, id);
      if (textBudgetName == null) {
        break missingId;
      }

      id = R.id.text_category;
      TextView textCategory = ViewBindings.findChildViewById(rootView, id);
      if (textCategory == null) {
        break missingId;
      }

      id = R.id.text_period;
      TextView textPeriod = ViewBindings.findChildViewById(rootView, id);
      if (textPeriod == null) {
        break missingId;
      }

      id = R.id.text_progress_percentage;
      TextView textProgressPercentage = ViewBindings.findChildViewById(rootView, id);
      if (textProgressPercentage == null) {
        break missingId;
      }

      id = R.id.text_remaining_amount;
      TextView textRemainingAmount = ViewBindings.findChildViewById(rootView, id);
      if (textRemainingAmount == null) {
        break missingId;
      }

      id = R.id.text_spent_amount;
      TextView textSpentAmount = ViewBindings.findChildViewById(rootView, id);
      if (textSpentAmount == null) {
        break missingId;
      }

      id = R.id.text_status_indicator;
      TextView textStatusIndicator = ViewBindings.findChildViewById(rootView, id);
      if (textStatusIndicator == null) {
        break missingId;
      }

      return new ItemBudgetBinding((MaterialCardView) rootView, buttonDelete, buttonEdit,
          progressBudget, textBudgetAmount, textBudgetName, textCategory, textPeriod,
          textProgressPercentage, textRemainingAmount, textSpentAmount, textStatusIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

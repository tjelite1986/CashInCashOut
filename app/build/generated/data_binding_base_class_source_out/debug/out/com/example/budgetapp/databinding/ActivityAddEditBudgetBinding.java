// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddEditBudgetBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton buttonCancel;

  @NonNull
  public final MaterialButton buttonSave;

  @NonNull
  public final AutoCompleteTextView dropdownCategory;

  @NonNull
  public final AutoCompleteTextView dropdownPeriod;

  @NonNull
  public final TextInputEditText editAlertThreshold;

  @NonNull
  public final TextInputEditText editBudgetAmount;

  @NonNull
  public final TextInputEditText editBudgetName;

  @NonNull
  public final TextInputEditText editStartDate;

  @NonNull
  public final TextView textBudgetInfo;

  @NonNull
  public final TextInputLayout textInputAlertThreshold;

  @NonNull
  public final TextInputLayout textInputBudgetAmount;

  @NonNull
  public final TextInputLayout textInputBudgetName;

  @NonNull
  public final TextInputLayout textInputCategory;

  @NonNull
  public final TextInputLayout textInputPeriod;

  @NonNull
  public final TextInputLayout textInputStartDate;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityAddEditBudgetBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton buttonCancel, @NonNull MaterialButton buttonSave,
      @NonNull AutoCompleteTextView dropdownCategory, @NonNull AutoCompleteTextView dropdownPeriod,
      @NonNull TextInputEditText editAlertThreshold, @NonNull TextInputEditText editBudgetAmount,
      @NonNull TextInputEditText editBudgetName, @NonNull TextInputEditText editStartDate,
      @NonNull TextView textBudgetInfo, @NonNull TextInputLayout textInputAlertThreshold,
      @NonNull TextInputLayout textInputBudgetAmount, @NonNull TextInputLayout textInputBudgetName,
      @NonNull TextInputLayout textInputCategory, @NonNull TextInputLayout textInputPeriod,
      @NonNull TextInputLayout textInputStartDate, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonSave = buttonSave;
    this.dropdownCategory = dropdownCategory;
    this.dropdownPeriod = dropdownPeriod;
    this.editAlertThreshold = editAlertThreshold;
    this.editBudgetAmount = editBudgetAmount;
    this.editBudgetName = editBudgetName;
    this.editStartDate = editStartDate;
    this.textBudgetInfo = textBudgetInfo;
    this.textInputAlertThreshold = textInputAlertThreshold;
    this.textInputBudgetAmount = textInputBudgetAmount;
    this.textInputBudgetName = textInputBudgetName;
    this.textInputCategory = textInputCategory;
    this.textInputPeriod = textInputPeriod;
    this.textInputStartDate = textInputStartDate;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddEditBudgetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddEditBudgetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_edit_budget, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddEditBudgetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cancel;
      MaterialButton buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.button_save;
      MaterialButton buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.dropdown_category;
      AutoCompleteTextView dropdownCategory = ViewBindings.findChildViewById(rootView, id);
      if (dropdownCategory == null) {
        break missingId;
      }

      id = R.id.dropdown_period;
      AutoCompleteTextView dropdownPeriod = ViewBindings.findChildViewById(rootView, id);
      if (dropdownPeriod == null) {
        break missingId;
      }

      id = R.id.edit_alert_threshold;
      TextInputEditText editAlertThreshold = ViewBindings.findChildViewById(rootView, id);
      if (editAlertThreshold == null) {
        break missingId;
      }

      id = R.id.edit_budget_amount;
      TextInputEditText editBudgetAmount = ViewBindings.findChildViewById(rootView, id);
      if (editBudgetAmount == null) {
        break missingId;
      }

      id = R.id.edit_budget_name;
      TextInputEditText editBudgetName = ViewBindings.findChildViewById(rootView, id);
      if (editBudgetName == null) {
        break missingId;
      }

      id = R.id.edit_start_date;
      TextInputEditText editStartDate = ViewBindings.findChildViewById(rootView, id);
      if (editStartDate == null) {
        break missingId;
      }

      id = R.id.text_budget_info;
      TextView textBudgetInfo = ViewBindings.findChildViewById(rootView, id);
      if (textBudgetInfo == null) {
        break missingId;
      }

      id = R.id.text_input_alert_threshold;
      TextInputLayout textInputAlertThreshold = ViewBindings.findChildViewById(rootView, id);
      if (textInputAlertThreshold == null) {
        break missingId;
      }

      id = R.id.text_input_budget_amount;
      TextInputLayout textInputBudgetAmount = ViewBindings.findChildViewById(rootView, id);
      if (textInputBudgetAmount == null) {
        break missingId;
      }

      id = R.id.text_input_budget_name;
      TextInputLayout textInputBudgetName = ViewBindings.findChildViewById(rootView, id);
      if (textInputBudgetName == null) {
        break missingId;
      }

      id = R.id.text_input_category;
      TextInputLayout textInputCategory = ViewBindings.findChildViewById(rootView, id);
      if (textInputCategory == null) {
        break missingId;
      }

      id = R.id.text_input_period;
      TextInputLayout textInputPeriod = ViewBindings.findChildViewById(rootView, id);
      if (textInputPeriod == null) {
        break missingId;
      }

      id = R.id.text_input_start_date;
      TextInputLayout textInputStartDate = ViewBindings.findChildViewById(rootView, id);
      if (textInputStartDate == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddEditBudgetBinding((CoordinatorLayout) rootView, buttonCancel,
          buttonSave, dropdownCategory, dropdownPeriod, editAlertThreshold, editBudgetAmount,
          editBudgetName, editStartDate, textBudgetInfo, textInputAlertThreshold,
          textInputBudgetAmount, textInputBudgetName, textInputCategory, textInputPeriod,
          textInputStartDate, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

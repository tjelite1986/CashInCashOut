// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemExpenseBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton btnDeleteExpense;

  @NonNull
  public final ImageButton btnEditExpense;

  @NonNull
  public final MaterialCardView cardExpense;

  @NonNull
  public final TextView tvExpenseAmount;

  @NonNull
  public final TextView tvExpenseCategory;

  @NonNull
  public final TextView tvExpenseDate;

  @NonNull
  public final TextView tvExpenseDescription;

  @NonNull
  public final TextView tvExpensePaymentMethod;

  @NonNull
  public final TextView tvExpenseRecurring;

  @NonNull
  public final TextView tvExpenseStore;

  @NonNull
  public final TextView tvExpenseTitle;

  private ItemExpenseBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageButton btnDeleteExpense, @NonNull ImageButton btnEditExpense,
      @NonNull MaterialCardView cardExpense, @NonNull TextView tvExpenseAmount,
      @NonNull TextView tvExpenseCategory, @NonNull TextView tvExpenseDate,
      @NonNull TextView tvExpenseDescription, @NonNull TextView tvExpensePaymentMethod,
      @NonNull TextView tvExpenseRecurring, @NonNull TextView tvExpenseStore,
      @NonNull TextView tvExpenseTitle) {
    this.rootView = rootView;
    this.btnDeleteExpense = btnDeleteExpense;
    this.btnEditExpense = btnEditExpense;
    this.cardExpense = cardExpense;
    this.tvExpenseAmount = tvExpenseAmount;
    this.tvExpenseCategory = tvExpenseCategory;
    this.tvExpenseDate = tvExpenseDate;
    this.tvExpenseDescription = tvExpenseDescription;
    this.tvExpensePaymentMethod = tvExpensePaymentMethod;
    this.tvExpenseRecurring = tvExpenseRecurring;
    this.tvExpenseStore = tvExpenseStore;
    this.tvExpenseTitle = tvExpenseTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemExpenseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemExpenseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_expense, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemExpenseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteExpense;
      ImageButton btnDeleteExpense = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteExpense == null) {
        break missingId;
      }

      id = R.id.btnEditExpense;
      ImageButton btnEditExpense = ViewBindings.findChildViewById(rootView, id);
      if (btnEditExpense == null) {
        break missingId;
      }

      MaterialCardView cardExpense = (MaterialCardView) rootView;

      id = R.id.tvExpenseAmount;
      TextView tvExpenseAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseAmount == null) {
        break missingId;
      }

      id = R.id.tvExpenseCategory;
      TextView tvExpenseCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseCategory == null) {
        break missingId;
      }

      id = R.id.tvExpenseDate;
      TextView tvExpenseDate = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseDate == null) {
        break missingId;
      }

      id = R.id.tvExpenseDescription;
      TextView tvExpenseDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseDescription == null) {
        break missingId;
      }

      id = R.id.tvExpensePaymentMethod;
      TextView tvExpensePaymentMethod = ViewBindings.findChildViewById(rootView, id);
      if (tvExpensePaymentMethod == null) {
        break missingId;
      }

      id = R.id.tvExpenseRecurring;
      TextView tvExpenseRecurring = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseRecurring == null) {
        break missingId;
      }

      id = R.id.tvExpenseStore;
      TextView tvExpenseStore = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseStore == null) {
        break missingId;
      }

      id = R.id.tvExpenseTitle;
      TextView tvExpenseTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseTitle == null) {
        break missingId;
      }

      return new ItemExpenseBinding((MaterialCardView) rootView, btnDeleteExpense, btnEditExpense,
          cardExpense, tvExpenseAmount, tvExpenseCategory, tvExpenseDate, tvExpenseDescription,
          tvExpensePaymentMethod, tvExpenseRecurring, tvExpenseStore, tvExpenseTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

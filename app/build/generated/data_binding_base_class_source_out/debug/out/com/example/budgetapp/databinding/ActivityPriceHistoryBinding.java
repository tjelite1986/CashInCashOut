// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.github.mikephil.charting.charts.LineChart;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPriceHistoryBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialCardView layoutStatistics;

  @NonNull
  public final LineChart priceChart;

  @NonNull
  public final TextView textAvgPrice;

  @NonNull
  public final TextView textLatestPrice;

  @NonNull
  public final TextView textMaxPrice;

  @NonNull
  public final TextView textMinPrice;

  @NonNull
  public final TextView textProductBrand;

  @NonNull
  public final TextView textProductName;

  @NonNull
  public final Toolbar toolbar;

  private ActivityPriceHistoryBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialCardView layoutStatistics, @NonNull LineChart priceChart,
      @NonNull TextView textAvgPrice, @NonNull TextView textLatestPrice,
      @NonNull TextView textMaxPrice, @NonNull TextView textMinPrice,
      @NonNull TextView textProductBrand, @NonNull TextView textProductName,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.layoutStatistics = layoutStatistics;
    this.priceChart = priceChart;
    this.textAvgPrice = textAvgPrice;
    this.textLatestPrice = textLatestPrice;
    this.textMaxPrice = textMaxPrice;
    this.textMinPrice = textMinPrice;
    this.textProductBrand = textProductBrand;
    this.textProductName = textProductName;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPriceHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPriceHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_price_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPriceHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout_statistics;
      MaterialCardView layoutStatistics = ViewBindings.findChildViewById(rootView, id);
      if (layoutStatistics == null) {
        break missingId;
      }

      id = R.id.price_chart;
      LineChart priceChart = ViewBindings.findChildViewById(rootView, id);
      if (priceChart == null) {
        break missingId;
      }

      id = R.id.text_avg_price;
      TextView textAvgPrice = ViewBindings.findChildViewById(rootView, id);
      if (textAvgPrice == null) {
        break missingId;
      }

      id = R.id.text_latest_price;
      TextView textLatestPrice = ViewBindings.findChildViewById(rootView, id);
      if (textLatestPrice == null) {
        break missingId;
      }

      id = R.id.text_max_price;
      TextView textMaxPrice = ViewBindings.findChildViewById(rootView, id);
      if (textMaxPrice == null) {
        break missingId;
      }

      id = R.id.text_min_price;
      TextView textMinPrice = ViewBindings.findChildViewById(rootView, id);
      if (textMinPrice == null) {
        break missingId;
      }

      id = R.id.text_product_brand;
      TextView textProductBrand = ViewBindings.findChildViewById(rootView, id);
      if (textProductBrand == null) {
        break missingId;
      }

      id = R.id.text_product_name;
      TextView textProductName = ViewBindings.findChildViewById(rootView, id);
      if (textProductName == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityPriceHistoryBinding((CoordinatorLayout) rootView, layoutStatistics,
          priceChart, textAvgPrice, textLatestPrice, textMaxPrice, textMinPrice, textProductBrand,
          textProductName, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

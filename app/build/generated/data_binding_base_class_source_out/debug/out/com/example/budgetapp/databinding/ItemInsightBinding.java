// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemInsightBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView imageViewInsightIcon;

  @NonNull
  public final LinearLayout layoutAmountInfo;

  @NonNull
  public final LinearLayout layoutSuggestedAction;

  @NonNull
  public final ProgressBar progressBarConfidence;

  @NonNull
  public final TextView textViewAmount;

  @NonNull
  public final TextView textViewConfidence;

  @NonNull
  public final TextView textViewInsightDate;

  @NonNull
  public final TextView textViewInsightDescription;

  @NonNull
  public final TextView textViewInsightTitle;

  @NonNull
  public final TextView textViewPercentage;

  @NonNull
  public final TextView textViewSeverity;

  @NonNull
  public final TextView textViewSuggestedAction;

  @NonNull
  public final View viewNewIndicator;

  @NonNull
  public final View viewSeverityIndicator;

  private ItemInsightBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView imageViewInsightIcon, @NonNull LinearLayout layoutAmountInfo,
      @NonNull LinearLayout layoutSuggestedAction, @NonNull ProgressBar progressBarConfidence,
      @NonNull TextView textViewAmount, @NonNull TextView textViewConfidence,
      @NonNull TextView textViewInsightDate, @NonNull TextView textViewInsightDescription,
      @NonNull TextView textViewInsightTitle, @NonNull TextView textViewPercentage,
      @NonNull TextView textViewSeverity, @NonNull TextView textViewSuggestedAction,
      @NonNull View viewNewIndicator, @NonNull View viewSeverityIndicator) {
    this.rootView = rootView;
    this.imageViewInsightIcon = imageViewInsightIcon;
    this.layoutAmountInfo = layoutAmountInfo;
    this.layoutSuggestedAction = layoutSuggestedAction;
    this.progressBarConfidence = progressBarConfidence;
    this.textViewAmount = textViewAmount;
    this.textViewConfidence = textViewConfidence;
    this.textViewInsightDate = textViewInsightDate;
    this.textViewInsightDescription = textViewInsightDescription;
    this.textViewInsightTitle = textViewInsightTitle;
    this.textViewPercentage = textViewPercentage;
    this.textViewSeverity = textViewSeverity;
    this.textViewSuggestedAction = textViewSuggestedAction;
    this.viewNewIndicator = viewNewIndicator;
    this.viewSeverityIndicator = viewSeverityIndicator;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemInsightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemInsightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_insight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemInsightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageViewInsightIcon;
      ImageView imageViewInsightIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewInsightIcon == null) {
        break missingId;
      }

      id = R.id.layoutAmountInfo;
      LinearLayout layoutAmountInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutAmountInfo == null) {
        break missingId;
      }

      id = R.id.layoutSuggestedAction;
      LinearLayout layoutSuggestedAction = ViewBindings.findChildViewById(rootView, id);
      if (layoutSuggestedAction == null) {
        break missingId;
      }

      id = R.id.progressBarConfidence;
      ProgressBar progressBarConfidence = ViewBindings.findChildViewById(rootView, id);
      if (progressBarConfidence == null) {
        break missingId;
      }

      id = R.id.textViewAmount;
      TextView textViewAmount = ViewBindings.findChildViewById(rootView, id);
      if (textViewAmount == null) {
        break missingId;
      }

      id = R.id.textViewConfidence;
      TextView textViewConfidence = ViewBindings.findChildViewById(rootView, id);
      if (textViewConfidence == null) {
        break missingId;
      }

      id = R.id.textViewInsightDate;
      TextView textViewInsightDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewInsightDate == null) {
        break missingId;
      }

      id = R.id.textViewInsightDescription;
      TextView textViewInsightDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewInsightDescription == null) {
        break missingId;
      }

      id = R.id.textViewInsightTitle;
      TextView textViewInsightTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewInsightTitle == null) {
        break missingId;
      }

      id = R.id.textViewPercentage;
      TextView textViewPercentage = ViewBindings.findChildViewById(rootView, id);
      if (textViewPercentage == null) {
        break missingId;
      }

      id = R.id.textViewSeverity;
      TextView textViewSeverity = ViewBindings.findChildViewById(rootView, id);
      if (textViewSeverity == null) {
        break missingId;
      }

      id = R.id.textViewSuggestedAction;
      TextView textViewSuggestedAction = ViewBindings.findChildViewById(rootView, id);
      if (textViewSuggestedAction == null) {
        break missingId;
      }

      id = R.id.viewNewIndicator;
      View viewNewIndicator = ViewBindings.findChildViewById(rootView, id);
      if (viewNewIndicator == null) {
        break missingId;
      }

      id = R.id.viewSeverityIndicator;
      View viewSeverityIndicator = ViewBindings.findChildViewById(rootView, id);
      if (viewSeverityIndicator == null) {
        break missingId;
      }

      return new ItemInsightBinding((MaterialCardView) rootView, imageViewInsightIcon,
          layoutAmountInfo, layoutSuggestedAction, progressBarConfidence, textViewAmount,
          textViewConfidence, textViewInsightDate, textViewInsightDescription, textViewInsightTitle,
          textViewPercentage, textViewSeverity, textViewSuggestedAction, viewNewIndicator,
          viewSeverityIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

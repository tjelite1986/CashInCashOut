// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStoreAndProductManagerBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialCardView cardProductCategories;

  @NonNull
  public final MaterialCardView cardProductManagement;

  @NonNull
  public final MaterialCardView cardStoreChains;

  @NonNull
  public final MaterialCardView cardStoreManagement;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityStoreAndProductManagerBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialCardView cardProductCategories,
      @NonNull MaterialCardView cardProductManagement, @NonNull MaterialCardView cardStoreChains,
      @NonNull MaterialCardView cardStoreManagement, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.cardProductCategories = cardProductCategories;
    this.cardProductManagement = cardProductManagement;
    this.cardStoreChains = cardStoreChains;
    this.cardStoreManagement = cardStoreManagement;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStoreAndProductManagerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStoreAndProductManagerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_store_and_product_manager, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStoreAndProductManagerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardProductCategories;
      MaterialCardView cardProductCategories = ViewBindings.findChildViewById(rootView, id);
      if (cardProductCategories == null) {
        break missingId;
      }

      id = R.id.cardProductManagement;
      MaterialCardView cardProductManagement = ViewBindings.findChildViewById(rootView, id);
      if (cardProductManagement == null) {
        break missingId;
      }

      id = R.id.cardStoreChains;
      MaterialCardView cardStoreChains = ViewBindings.findChildViewById(rootView, id);
      if (cardStoreChains == null) {
        break missingId;
      }

      id = R.id.cardStoreManagement;
      MaterialCardView cardStoreManagement = ViewBindings.findChildViewById(rootView, id);
      if (cardStoreManagement == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityStoreAndProductManagerBinding((CoordinatorLayout) rootView,
          cardProductCategories, cardProductManagement, cardStoreChains, cardStoreManagement,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddStoreOldBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText etStoreAddress;

  @NonNull
  public final TextInputEditText etStoreChain;

  @NonNull
  public final TextInputEditText etStoreCity;

  @NonNull
  public final TextInputEditText etStoreName;

  @NonNull
  public final TextInputLayout tilStoreAddress;

  @NonNull
  public final TextInputLayout tilStoreChain;

  @NonNull
  public final TextInputLayout tilStoreCity;

  @NonNull
  public final TextInputLayout tilStoreName;

  private DialogAddStoreOldBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText etStoreAddress, @NonNull TextInputEditText etStoreChain,
      @NonNull TextInputEditText etStoreCity, @NonNull TextInputEditText etStoreName,
      @NonNull TextInputLayout tilStoreAddress, @NonNull TextInputLayout tilStoreChain,
      @NonNull TextInputLayout tilStoreCity, @NonNull TextInputLayout tilStoreName) {
    this.rootView = rootView;
    this.etStoreAddress = etStoreAddress;
    this.etStoreChain = etStoreChain;
    this.etStoreCity = etStoreCity;
    this.etStoreName = etStoreName;
    this.tilStoreAddress = tilStoreAddress;
    this.tilStoreChain = tilStoreChain;
    this.tilStoreCity = tilStoreCity;
    this.tilStoreName = tilStoreName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddStoreOldBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddStoreOldBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_store_old, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddStoreOldBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etStoreAddress;
      TextInputEditText etStoreAddress = ViewBindings.findChildViewById(rootView, id);
      if (etStoreAddress == null) {
        break missingId;
      }

      id = R.id.etStoreChain;
      TextInputEditText etStoreChain = ViewBindings.findChildViewById(rootView, id);
      if (etStoreChain == null) {
        break missingId;
      }

      id = R.id.etStoreCity;
      TextInputEditText etStoreCity = ViewBindings.findChildViewById(rootView, id);
      if (etStoreCity == null) {
        break missingId;
      }

      id = R.id.etStoreName;
      TextInputEditText etStoreName = ViewBindings.findChildViewById(rootView, id);
      if (etStoreName == null) {
        break missingId;
      }

      id = R.id.tilStoreAddress;
      TextInputLayout tilStoreAddress = ViewBindings.findChildViewById(rootView, id);
      if (tilStoreAddress == null) {
        break missingId;
      }

      id = R.id.tilStoreChain;
      TextInputLayout tilStoreChain = ViewBindings.findChildViewById(rootView, id);
      if (tilStoreChain == null) {
        break missingId;
      }

      id = R.id.tilStoreCity;
      TextInputLayout tilStoreCity = ViewBindings.findChildViewById(rootView, id);
      if (tilStoreCity == null) {
        break missingId;
      }

      id = R.id.tilStoreName;
      TextInputLayout tilStoreName = ViewBindings.findChildViewById(rootView, id);
      if (tilStoreName == null) {
        break missingId;
      }

      return new DialogAddStoreOldBinding((LinearLayout) rootView, etStoreAddress, etStoreChain,
          etStoreCity, etStoreName, tilStoreAddress, tilStoreChain, tilStoreCity, tilStoreName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

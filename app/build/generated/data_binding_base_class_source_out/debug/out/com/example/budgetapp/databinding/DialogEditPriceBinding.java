// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogEditPriceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText editTextCampaignPrice;

  @NonNull
  public final TextInputEditText editTextCampaignQuantity;

  @NonNull
  public final TextInputEditText editTextPrice;

  @NonNull
  public final LinearLayout layoutCampaignPrice;

  @NonNull
  public final SwitchMaterial switchCampaignPrice;

  @NonNull
  public final TextView textViewStore;

  private DialogEditPriceBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText editTextCampaignPrice,
      @NonNull TextInputEditText editTextCampaignQuantity, @NonNull TextInputEditText editTextPrice,
      @NonNull LinearLayout layoutCampaignPrice, @NonNull SwitchMaterial switchCampaignPrice,
      @NonNull TextView textViewStore) {
    this.rootView = rootView;
    this.editTextCampaignPrice = editTextCampaignPrice;
    this.editTextCampaignQuantity = editTextCampaignQuantity;
    this.editTextPrice = editTextPrice;
    this.layoutCampaignPrice = layoutCampaignPrice;
    this.switchCampaignPrice = switchCampaignPrice;
    this.textViewStore = textViewStore;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogEditPriceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogEditPriceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_edit_price, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogEditPriceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextCampaignPrice;
      TextInputEditText editTextCampaignPrice = ViewBindings.findChildViewById(rootView, id);
      if (editTextCampaignPrice == null) {
        break missingId;
      }

      id = R.id.editTextCampaignQuantity;
      TextInputEditText editTextCampaignQuantity = ViewBindings.findChildViewById(rootView, id);
      if (editTextCampaignQuantity == null) {
        break missingId;
      }

      id = R.id.editTextPrice;
      TextInputEditText editTextPrice = ViewBindings.findChildViewById(rootView, id);
      if (editTextPrice == null) {
        break missingId;
      }

      id = R.id.layoutCampaignPrice;
      LinearLayout layoutCampaignPrice = ViewBindings.findChildViewById(rootView, id);
      if (layoutCampaignPrice == null) {
        break missingId;
      }

      id = R.id.switchCampaignPrice;
      SwitchMaterial switchCampaignPrice = ViewBindings.findChildViewById(rootView, id);
      if (switchCampaignPrice == null) {
        break missingId;
      }

      id = R.id.textViewStore;
      TextView textViewStore = ViewBindings.findChildViewById(rootView, id);
      if (textViewStore == null) {
        break missingId;
      }

      return new DialogEditPriceBinding((LinearLayout) rootView, editTextCampaignPrice,
          editTextCampaignQuantity, editTextPrice, layoutCampaignPrice, switchCampaignPrice,
          textViewStore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

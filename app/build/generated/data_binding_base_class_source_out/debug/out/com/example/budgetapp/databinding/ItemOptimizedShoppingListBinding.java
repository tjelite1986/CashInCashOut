// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemOptimizedShoppingListBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Chip chipSavings;

  @NonNull
  public final RecyclerView recyclerViewItems;

  @NonNull
  public final TextView textItemCount;

  @NonNull
  public final TextView textSavings;

  @NonNull
  public final TextView textStoreAddress;

  @NonNull
  public final TextView textStoreName;

  @NonNull
  public final TextView textTotalCost;

  private ItemOptimizedShoppingListBinding(@NonNull MaterialCardView rootView,
      @NonNull Chip chipSavings, @NonNull RecyclerView recyclerViewItems,
      @NonNull TextView textItemCount, @NonNull TextView textSavings,
      @NonNull TextView textStoreAddress, @NonNull TextView textStoreName,
      @NonNull TextView textTotalCost) {
    this.rootView = rootView;
    this.chipSavings = chipSavings;
    this.recyclerViewItems = recyclerViewItems;
    this.textItemCount = textItemCount;
    this.textSavings = textSavings;
    this.textStoreAddress = textStoreAddress;
    this.textStoreName = textStoreName;
    this.textTotalCost = textTotalCost;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOptimizedShoppingListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOptimizedShoppingListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_optimized_shopping_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOptimizedShoppingListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chip_savings;
      Chip chipSavings = ViewBindings.findChildViewById(rootView, id);
      if (chipSavings == null) {
        break missingId;
      }

      id = R.id.recycler_view_items;
      RecyclerView recyclerViewItems = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewItems == null) {
        break missingId;
      }

      id = R.id.text_item_count;
      TextView textItemCount = ViewBindings.findChildViewById(rootView, id);
      if (textItemCount == null) {
        break missingId;
      }

      id = R.id.text_savings;
      TextView textSavings = ViewBindings.findChildViewById(rootView, id);
      if (textSavings == null) {
        break missingId;
      }

      id = R.id.text_store_address;
      TextView textStoreAddress = ViewBindings.findChildViewById(rootView, id);
      if (textStoreAddress == null) {
        break missingId;
      }

      id = R.id.text_store_name;
      TextView textStoreName = ViewBindings.findChildViewById(rootView, id);
      if (textStoreName == null) {
        break missingId;
      }

      id = R.id.text_total_cost;
      TextView textTotalCost = ViewBindings.findChildViewById(rootView, id);
      if (textTotalCost == null) {
        break missingId;
      }

      return new ItemOptimizedShoppingListBinding((MaterialCardView) rootView, chipSavings,
          recyclerViewItems, textItemCount, textSavings, textStoreAddress, textStoreName,
          textTotalCost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddStoreChainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final MaterialButton btnSave;

  @NonNull
  public final TextInputEditText etChainDescription;

  @NonNull
  public final TextInputEditText etChainName;

  @NonNull
  public final TextInputEditText etChainWebsite;

  private DialogAddStoreChainBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton btnCancel, @NonNull MaterialButton btnSave,
      @NonNull TextInputEditText etChainDescription, @NonNull TextInputEditText etChainName,
      @NonNull TextInputEditText etChainWebsite) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnSave = btnSave;
    this.etChainDescription = etChainDescription;
    this.etChainName = etChainName;
    this.etChainWebsite = etChainWebsite;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddStoreChainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddStoreChainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_store_chain, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddStoreChainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnSave;
      MaterialButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.etChainDescription;
      TextInputEditText etChainDescription = ViewBindings.findChildViewById(rootView, id);
      if (etChainDescription == null) {
        break missingId;
      }

      id = R.id.etChainName;
      TextInputEditText etChainName = ViewBindings.findChildViewById(rootView, id);
      if (etChainName == null) {
        break missingId;
      }

      id = R.id.etChainWebsite;
      TextInputEditText etChainWebsite = ViewBindings.findChildViewById(rootView, id);
      if (etChainWebsite == null) {
        break missingId;
      }

      return new DialogAddStoreChainBinding((LinearLayout) rootView, btnCancel, btnSave,
          etChainDescription, etChainName, etChainWebsite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddEditCategoryBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton buttonExpense;

  @NonNull
  public final MaterialButton buttonIncome;

  @NonNull
  public final TextView buttonMainCategory;

  @NonNull
  public final MaterialButton buttonSave;

  @NonNull
  public final TextView buttonSubcategory;

  @NonNull
  public final TextInputEditText editTextName;

  @NonNull
  public final ImageView previewIcon;

  @NonNull
  public final RecyclerView recyclerViewColors;

  @NonNull
  public final RecyclerView recyclerViewSubcategories;

  @NonNull
  public final TextView textSubcategoryLabel;

  @NonNull
  public final MaterialButtonToggleGroup toggleGroupType;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityAddEditCategoryBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton buttonExpense, @NonNull MaterialButton buttonIncome,
      @NonNull TextView buttonMainCategory, @NonNull MaterialButton buttonSave,
      @NonNull TextView buttonSubcategory, @NonNull TextInputEditText editTextName,
      @NonNull ImageView previewIcon, @NonNull RecyclerView recyclerViewColors,
      @NonNull RecyclerView recyclerViewSubcategories, @NonNull TextView textSubcategoryLabel,
      @NonNull MaterialButtonToggleGroup toggleGroupType, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.buttonExpense = buttonExpense;
    this.buttonIncome = buttonIncome;
    this.buttonMainCategory = buttonMainCategory;
    this.buttonSave = buttonSave;
    this.buttonSubcategory = buttonSubcategory;
    this.editTextName = editTextName;
    this.previewIcon = previewIcon;
    this.recyclerViewColors = recyclerViewColors;
    this.recyclerViewSubcategories = recyclerViewSubcategories;
    this.textSubcategoryLabel = textSubcategoryLabel;
    this.toggleGroupType = toggleGroupType;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddEditCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddEditCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_edit_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddEditCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonExpense;
      MaterialButton buttonExpense = ViewBindings.findChildViewById(rootView, id);
      if (buttonExpense == null) {
        break missingId;
      }

      id = R.id.buttonIncome;
      MaterialButton buttonIncome = ViewBindings.findChildViewById(rootView, id);
      if (buttonIncome == null) {
        break missingId;
      }

      id = R.id.buttonMainCategory;
      TextView buttonMainCategory = ViewBindings.findChildViewById(rootView, id);
      if (buttonMainCategory == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      MaterialButton buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.buttonSubcategory;
      TextView buttonSubcategory = ViewBindings.findChildViewById(rootView, id);
      if (buttonSubcategory == null) {
        break missingId;
      }

      id = R.id.editTextName;
      TextInputEditText editTextName = ViewBindings.findChildViewById(rootView, id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.previewIcon;
      ImageView previewIcon = ViewBindings.findChildViewById(rootView, id);
      if (previewIcon == null) {
        break missingId;
      }

      id = R.id.recyclerViewColors;
      RecyclerView recyclerViewColors = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewColors == null) {
        break missingId;
      }

      id = R.id.recyclerViewSubcategories;
      RecyclerView recyclerViewSubcategories = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewSubcategories == null) {
        break missingId;
      }

      id = R.id.textSubcategoryLabel;
      TextView textSubcategoryLabel = ViewBindings.findChildViewById(rootView, id);
      if (textSubcategoryLabel == null) {
        break missingId;
      }

      id = R.id.toggleGroupType;
      MaterialButtonToggleGroup toggleGroupType = ViewBindings.findChildViewById(rootView, id);
      if (toggleGroupType == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddEditCategoryBinding((CoordinatorLayout) rootView, buttonExpense,
          buttonIncome, buttonMainCategory, buttonSave, buttonSubcategory, editTextName,
          previewIcon, recyclerViewColors, recyclerViewSubcategories, textSubcategoryLabel,
          toggleGroupType, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

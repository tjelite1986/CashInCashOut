// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTransactionsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btnAddExpenseEmpty;

  @NonNull
  public final Button btnAddIncomeEmpty;

  @NonNull
  public final MaterialCardView cardExpensesSummary;

  @NonNull
  public final MaterialCardView cardIncomeSummary;

  @NonNull
  public final Chip chipAll;

  @NonNull
  public final Chip chipExpenses;

  @NonNull
  public final ChipGroup chipGroupFilter;

  @NonNull
  public final Chip chipIncome;

  @NonNull
  public final FloatingActionButton fabExpense;

  @NonNull
  public final FloatingActionButton fabIncome;

  @NonNull
  public final FloatingActionButton fabMain;

  @NonNull
  public final LinearLayout layoutEmptyState;

  @NonNull
  public final RecyclerView recyclerTransactions;

  @NonNull
  public final TextView textEmptyMessage;

  @NonNull
  public final TextView textEmptyTitle;

  @NonNull
  public final TextView textExpensesTotal;

  @NonNull
  public final TextView textIncomeTotal;

  private FragmentTransactionsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button btnAddExpenseEmpty, @NonNull Button btnAddIncomeEmpty,
      @NonNull MaterialCardView cardExpensesSummary, @NonNull MaterialCardView cardIncomeSummary,
      @NonNull Chip chipAll, @NonNull Chip chipExpenses, @NonNull ChipGroup chipGroupFilter,
      @NonNull Chip chipIncome, @NonNull FloatingActionButton fabExpense,
      @NonNull FloatingActionButton fabIncome, @NonNull FloatingActionButton fabMain,
      @NonNull LinearLayout layoutEmptyState, @NonNull RecyclerView recyclerTransactions,
      @NonNull TextView textEmptyMessage, @NonNull TextView textEmptyTitle,
      @NonNull TextView textExpensesTotal, @NonNull TextView textIncomeTotal) {
    this.rootView = rootView;
    this.btnAddExpenseEmpty = btnAddExpenseEmpty;
    this.btnAddIncomeEmpty = btnAddIncomeEmpty;
    this.cardExpensesSummary = cardExpensesSummary;
    this.cardIncomeSummary = cardIncomeSummary;
    this.chipAll = chipAll;
    this.chipExpenses = chipExpenses;
    this.chipGroupFilter = chipGroupFilter;
    this.chipIncome = chipIncome;
    this.fabExpense = fabExpense;
    this.fabIncome = fabIncome;
    this.fabMain = fabMain;
    this.layoutEmptyState = layoutEmptyState;
    this.recyclerTransactions = recyclerTransactions;
    this.textEmptyMessage = textEmptyMessage;
    this.textEmptyTitle = textEmptyTitle;
    this.textExpensesTotal = textExpensesTotal;
    this.textIncomeTotal = textIncomeTotal;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTransactionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTransactionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_transactions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTransactionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_expense_empty;
      Button btnAddExpenseEmpty = ViewBindings.findChildViewById(rootView, id);
      if (btnAddExpenseEmpty == null) {
        break missingId;
      }

      id = R.id.btn_add_income_empty;
      Button btnAddIncomeEmpty = ViewBindings.findChildViewById(rootView, id);
      if (btnAddIncomeEmpty == null) {
        break missingId;
      }

      id = R.id.card_expenses_summary;
      MaterialCardView cardExpensesSummary = ViewBindings.findChildViewById(rootView, id);
      if (cardExpensesSummary == null) {
        break missingId;
      }

      id = R.id.card_income_summary;
      MaterialCardView cardIncomeSummary = ViewBindings.findChildViewById(rootView, id);
      if (cardIncomeSummary == null) {
        break missingId;
      }

      id = R.id.chip_all;
      Chip chipAll = ViewBindings.findChildViewById(rootView, id);
      if (chipAll == null) {
        break missingId;
      }

      id = R.id.chip_expenses;
      Chip chipExpenses = ViewBindings.findChildViewById(rootView, id);
      if (chipExpenses == null) {
        break missingId;
      }

      id = R.id.chip_group_filter;
      ChipGroup chipGroupFilter = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupFilter == null) {
        break missingId;
      }

      id = R.id.chip_income;
      Chip chipIncome = ViewBindings.findChildViewById(rootView, id);
      if (chipIncome == null) {
        break missingId;
      }

      id = R.id.fab_expense;
      FloatingActionButton fabExpense = ViewBindings.findChildViewById(rootView, id);
      if (fabExpense == null) {
        break missingId;
      }

      id = R.id.fab_income;
      FloatingActionButton fabIncome = ViewBindings.findChildViewById(rootView, id);
      if (fabIncome == null) {
        break missingId;
      }

      id = R.id.fab_main;
      FloatingActionButton fabMain = ViewBindings.findChildViewById(rootView, id);
      if (fabMain == null) {
        break missingId;
      }

      id = R.id.layout_empty_state;
      LinearLayout layoutEmptyState = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmptyState == null) {
        break missingId;
      }

      id = R.id.recycler_transactions;
      RecyclerView recyclerTransactions = ViewBindings.findChildViewById(rootView, id);
      if (recyclerTransactions == null) {
        break missingId;
      }

      id = R.id.text_empty_message;
      TextView textEmptyMessage = ViewBindings.findChildViewById(rootView, id);
      if (textEmptyMessage == null) {
        break missingId;
      }

      id = R.id.text_empty_title;
      TextView textEmptyTitle = ViewBindings.findChildViewById(rootView, id);
      if (textEmptyTitle == null) {
        break missingId;
      }

      id = R.id.text_expenses_total;
      TextView textExpensesTotal = ViewBindings.findChildViewById(rootView, id);
      if (textExpensesTotal == null) {
        break missingId;
      }

      id = R.id.text_income_total;
      TextView textIncomeTotal = ViewBindings.findChildViewById(rootView, id);
      if (textIncomeTotal == null) {
        break missingId;
      }

      return new FragmentTransactionsBinding((CoordinatorLayout) rootView, btnAddExpenseEmpty,
          btnAddIncomeEmpty, cardExpensesSummary, cardIncomeSummary, chipAll, chipExpenses,
          chipGroupFilter, chipIncome, fabExpense, fabIncome, fabMain, layoutEmptyState,
          recyclerTransactions, textEmptyMessage, textEmptyTitle, textExpensesTotal,
          textIncomeTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

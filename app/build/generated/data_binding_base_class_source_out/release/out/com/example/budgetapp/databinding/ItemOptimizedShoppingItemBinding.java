// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemOptimizedShoppingItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Chip chipBestPrice;

  @NonNull
  public final TextView textCampaignInfo;

  @NonNull
  public final TextView textItemName;

  @NonNull
  public final TextView textQuantity;

  @NonNull
  public final TextView textSavings;

  @NonNull
  public final TextView textTotalPrice;

  @NonNull
  public final TextView textUnitPrice;

  private ItemOptimizedShoppingItemBinding(@NonNull LinearLayout rootView,
      @NonNull Chip chipBestPrice, @NonNull TextView textCampaignInfo,
      @NonNull TextView textItemName, @NonNull TextView textQuantity, @NonNull TextView textSavings,
      @NonNull TextView textTotalPrice, @NonNull TextView textUnitPrice) {
    this.rootView = rootView;
    this.chipBestPrice = chipBestPrice;
    this.textCampaignInfo = textCampaignInfo;
    this.textItemName = textItemName;
    this.textQuantity = textQuantity;
    this.textSavings = textSavings;
    this.textTotalPrice = textTotalPrice;
    this.textUnitPrice = textUnitPrice;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOptimizedShoppingItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOptimizedShoppingItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_optimized_shopping_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOptimizedShoppingItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chip_best_price;
      Chip chipBestPrice = ViewBindings.findChildViewById(rootView, id);
      if (chipBestPrice == null) {
        break missingId;
      }

      id = R.id.text_campaign_info;
      TextView textCampaignInfo = ViewBindings.findChildViewById(rootView, id);
      if (textCampaignInfo == null) {
        break missingId;
      }

      id = R.id.text_item_name;
      TextView textItemName = ViewBindings.findChildViewById(rootView, id);
      if (textItemName == null) {
        break missingId;
      }

      id = R.id.text_quantity;
      TextView textQuantity = ViewBindings.findChildViewById(rootView, id);
      if (textQuantity == null) {
        break missingId;
      }

      id = R.id.text_savings;
      TextView textSavings = ViewBindings.findChildViewById(rootView, id);
      if (textSavings == null) {
        break missingId;
      }

      id = R.id.text_total_price;
      TextView textTotalPrice = ViewBindings.findChildViewById(rootView, id);
      if (textTotalPrice == null) {
        break missingId;
      }

      id = R.id.text_unit_price;
      TextView textUnitPrice = ViewBindings.findChildViewById(rootView, id);
      if (textUnitPrice == null) {
        break missingId;
      }

      return new ItemOptimizedShoppingItemBinding((LinearLayout) rootView, chipBestPrice,
          textCampaignInfo, textItemName, textQuantity, textSavings, textTotalPrice, textUnitPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

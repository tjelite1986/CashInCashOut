// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemStoreChainBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnDelete;

  @NonNull
  public final MaterialButton btnEdit;

  @NonNull
  public final MaterialButton btnToggleActive;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final TextView tvChainDescription;

  @NonNull
  public final TextView tvChainName;

  @NonNull
  public final TextView tvChainType;

  @NonNull
  public final TextView tvChainWebsite;

  private ItemStoreChainBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnDelete, @NonNull MaterialButton btnEdit,
      @NonNull MaterialButton btnToggleActive, @NonNull MaterialCardView cardView,
      @NonNull TextView tvChainDescription, @NonNull TextView tvChainName,
      @NonNull TextView tvChainType, @NonNull TextView tvChainWebsite) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.btnToggleActive = btnToggleActive;
    this.cardView = cardView;
    this.tvChainDescription = tvChainDescription;
    this.tvChainName = tvChainName;
    this.tvChainType = tvChainType;
    this.tvChainWebsite = tvChainWebsite;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemStoreChainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemStoreChainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_store_chain, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemStoreChainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      MaterialButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      MaterialButton btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.btnToggleActive;
      MaterialButton btnToggleActive = ViewBindings.findChildViewById(rootView, id);
      if (btnToggleActive == null) {
        break missingId;
      }

      MaterialCardView cardView = (MaterialCardView) rootView;

      id = R.id.tvChainDescription;
      TextView tvChainDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvChainDescription == null) {
        break missingId;
      }

      id = R.id.tvChainName;
      TextView tvChainName = ViewBindings.findChildViewById(rootView, id);
      if (tvChainName == null) {
        break missingId;
      }

      id = R.id.tvChainType;
      TextView tvChainType = ViewBindings.findChildViewById(rootView, id);
      if (tvChainType == null) {
        break missingId;
      }

      id = R.id.tvChainWebsite;
      TextView tvChainWebsite = ViewBindings.findChildViewById(rootView, id);
      if (tvChainWebsite == null) {
        break missingId;
      }

      return new ItemStoreChainBinding((MaterialCardView) rootView, btnDelete, btnEdit,
          btnToggleActive, cardView, tvChainDescription, tvChainName, tvChainType, tvChainWebsite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

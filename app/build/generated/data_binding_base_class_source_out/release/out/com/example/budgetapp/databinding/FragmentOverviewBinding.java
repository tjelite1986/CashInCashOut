// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOverviewBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button buttonAddBorrowed;

  @NonNull
  public final Button buttonAddExpense;

  @NonNull
  public final Button buttonAddIncome;

  @NonNull
  public final Button buttonAddLent;

  @NonNull
  public final MaterialCardView cardAccounts;

  @NonNull
  public final MaterialCardView cardBudgets;

  @NonNull
  public final MaterialCardView cardGoals;

  @NonNull
  public final MaterialCardView cardIncomeExpenses;

  @NonNull
  public final MaterialCardView cardLoans;

  @NonNull
  public final MaterialCardView cardNetWorth;

  @NonNull
  public final LinearLayout contentContainer;

  @NonNull
  public final FloatingActionButton fabAdd;

  @NonNull
  public final LinearLayout headerLayout;

  @NonNull
  public final ImageView menuOptions;

  @NonNull
  public final TextView textBorrowedAmount;

  @NonNull
  public final TextView textGreeting;

  @NonNull
  public final TextView textLentAmount;

  @NonNull
  public final TextView textMonthlyExpenses;

  @NonNull
  public final TextView textMonthlyIncome;

  @NonNull
  public final TextView textNetWorth;

  @NonNull
  public final TextView textTotalBalance;

  private FragmentOverviewBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button buttonAddBorrowed, @NonNull Button buttonAddExpense,
      @NonNull Button buttonAddIncome, @NonNull Button buttonAddLent,
      @NonNull MaterialCardView cardAccounts, @NonNull MaterialCardView cardBudgets,
      @NonNull MaterialCardView cardGoals, @NonNull MaterialCardView cardIncomeExpenses,
      @NonNull MaterialCardView cardLoans, @NonNull MaterialCardView cardNetWorth,
      @NonNull LinearLayout contentContainer, @NonNull FloatingActionButton fabAdd,
      @NonNull LinearLayout headerLayout, @NonNull ImageView menuOptions,
      @NonNull TextView textBorrowedAmount, @NonNull TextView textGreeting,
      @NonNull TextView textLentAmount, @NonNull TextView textMonthlyExpenses,
      @NonNull TextView textMonthlyIncome, @NonNull TextView textNetWorth,
      @NonNull TextView textTotalBalance) {
    this.rootView = rootView;
    this.buttonAddBorrowed = buttonAddBorrowed;
    this.buttonAddExpense = buttonAddExpense;
    this.buttonAddIncome = buttonAddIncome;
    this.buttonAddLent = buttonAddLent;
    this.cardAccounts = cardAccounts;
    this.cardBudgets = cardBudgets;
    this.cardGoals = cardGoals;
    this.cardIncomeExpenses = cardIncomeExpenses;
    this.cardLoans = cardLoans;
    this.cardNetWorth = cardNetWorth;
    this.contentContainer = contentContainer;
    this.fabAdd = fabAdd;
    this.headerLayout = headerLayout;
    this.menuOptions = menuOptions;
    this.textBorrowedAmount = textBorrowedAmount;
    this.textGreeting = textGreeting;
    this.textLentAmount = textLentAmount;
    this.textMonthlyExpenses = textMonthlyExpenses;
    this.textMonthlyIncome = textMonthlyIncome;
    this.textNetWorth = textNetWorth;
    this.textTotalBalance = textTotalBalance;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOverviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOverviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_overview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOverviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_add_borrowed;
      Button buttonAddBorrowed = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddBorrowed == null) {
        break missingId;
      }

      id = R.id.button_add_expense;
      Button buttonAddExpense = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddExpense == null) {
        break missingId;
      }

      id = R.id.button_add_income;
      Button buttonAddIncome = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddIncome == null) {
        break missingId;
      }

      id = R.id.button_add_lent;
      Button buttonAddLent = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddLent == null) {
        break missingId;
      }

      id = R.id.card_accounts;
      MaterialCardView cardAccounts = ViewBindings.findChildViewById(rootView, id);
      if (cardAccounts == null) {
        break missingId;
      }

      id = R.id.card_budgets;
      MaterialCardView cardBudgets = ViewBindings.findChildViewById(rootView, id);
      if (cardBudgets == null) {
        break missingId;
      }

      id = R.id.card_goals;
      MaterialCardView cardGoals = ViewBindings.findChildViewById(rootView, id);
      if (cardGoals == null) {
        break missingId;
      }

      id = R.id.card_income_expenses;
      MaterialCardView cardIncomeExpenses = ViewBindings.findChildViewById(rootView, id);
      if (cardIncomeExpenses == null) {
        break missingId;
      }

      id = R.id.card_loans;
      MaterialCardView cardLoans = ViewBindings.findChildViewById(rootView, id);
      if (cardLoans == null) {
        break missingId;
      }

      id = R.id.card_net_worth;
      MaterialCardView cardNetWorth = ViewBindings.findChildViewById(rootView, id);
      if (cardNetWorth == null) {
        break missingId;
      }

      id = R.id.content_container;
      LinearLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.fab_add;
      FloatingActionButton fabAdd = ViewBindings.findChildViewById(rootView, id);
      if (fabAdd == null) {
        break missingId;
      }

      id = R.id.header_layout;
      LinearLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.menu_options;
      ImageView menuOptions = ViewBindings.findChildViewById(rootView, id);
      if (menuOptions == null) {
        break missingId;
      }

      id = R.id.text_borrowed_amount;
      TextView textBorrowedAmount = ViewBindings.findChildViewById(rootView, id);
      if (textBorrowedAmount == null) {
        break missingId;
      }

      id = R.id.text_greeting;
      TextView textGreeting = ViewBindings.findChildViewById(rootView, id);
      if (textGreeting == null) {
        break missingId;
      }

      id = R.id.text_lent_amount;
      TextView textLentAmount = ViewBindings.findChildViewById(rootView, id);
      if (textLentAmount == null) {
        break missingId;
      }

      id = R.id.text_monthly_expenses;
      TextView textMonthlyExpenses = ViewBindings.findChildViewById(rootView, id);
      if (textMonthlyExpenses == null) {
        break missingId;
      }

      id = R.id.text_monthly_income;
      TextView textMonthlyIncome = ViewBindings.findChildViewById(rootView, id);
      if (textMonthlyIncome == null) {
        break missingId;
      }

      id = R.id.text_net_worth;
      TextView textNetWorth = ViewBindings.findChildViewById(rootView, id);
      if (textNetWorth == null) {
        break missingId;
      }

      id = R.id.text_total_balance;
      TextView textTotalBalance = ViewBindings.findChildViewById(rootView, id);
      if (textTotalBalance == null) {
        break missingId;
      }

      return new FragmentOverviewBinding((CoordinatorLayout) rootView, buttonAddBorrowed,
          buttonAddExpense, buttonAddIncome, buttonAddLent, cardAccounts, cardBudgets, cardGoals,
          cardIncomeExpenses, cardLoans, cardNetWorth, contentContainer, fabAdd, headerLayout,
          menuOptions, textBorrowedAmount, textGreeting, textLentAmount, textMonthlyExpenses,
          textMonthlyIncome, textNetWorth, textTotalBalance);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

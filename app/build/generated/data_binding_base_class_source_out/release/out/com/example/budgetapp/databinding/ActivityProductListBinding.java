// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProductListBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnManageStores;

  @NonNull
  public final FloatingActionButton fabAddProduct;

  @NonNull
  public final RecyclerView recyclerViewProducts;

  @NonNull
  public final TextView textViewEmpty;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityProductListBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnManageStores, @NonNull FloatingActionButton fabAddProduct,
      @NonNull RecyclerView recyclerViewProducts, @NonNull TextView textViewEmpty,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.btnManageStores = btnManageStores;
    this.fabAddProduct = fabAddProduct;
    this.recyclerViewProducts = recyclerViewProducts;
    this.textViewEmpty = textViewEmpty;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProductListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProductListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_product_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProductListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnManageStores;
      MaterialButton btnManageStores = ViewBindings.findChildViewById(rootView, id);
      if (btnManageStores == null) {
        break missingId;
      }

      id = R.id.fabAddProduct;
      FloatingActionButton fabAddProduct = ViewBindings.findChildViewById(rootView, id);
      if (fabAddProduct == null) {
        break missingId;
      }

      id = R.id.recyclerViewProducts;
      RecyclerView recyclerViewProducts = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewProducts == null) {
        break missingId;
      }

      id = R.id.textViewEmpty;
      TextView textViewEmpty = ViewBindings.findChildViewById(rootView, id);
      if (textViewEmpty == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityProductListBinding((CoordinatorLayout) rootView, btnManageStores,
          fabAddProduct, recyclerViewProducts, textViewEmpty, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

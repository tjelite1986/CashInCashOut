// Generated by view binder compiler. Do not edit!
package com.example.budgetapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.budgetapp.R;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditProductBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonCancel;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final Button buttonScanBarcode;

  @NonNull
  public final TextInputEditText editTextAmount;

  @NonNull
  public final TextInputEditText editTextBarcode;

  @NonNull
  public final TextInputEditText editTextCampaignPrice;

  @NonNull
  public final TextInputEditText editTextCampaignQuantity;

  @NonNull
  public final TextInputEditText editTextDepositAmount;

  @NonNull
  public final TextInputEditText editTextDescription;

  @NonNull
  public final TextInputEditText editTextPrice;

  @NonNull
  public final TextInputEditText editTextProductBrandName;

  @NonNull
  public final TextInputEditText editTextProductName;

  @NonNull
  public final LinearLayout layoutCampaignPrice;

  @NonNull
  public final LinearLayout layoutDeposit;

  @NonNull
  public final Spinner spinnerCategory;

  @NonNull
  public final Spinner spinnerUnit;

  @NonNull
  public final SwitchMaterial switchCampaignPrice;

  @NonNull
  public final SwitchMaterial switchDeposit;

  private ActivityEditProductBinding(@NonNull ScrollView rootView, @NonNull Button buttonCancel,
      @NonNull Button buttonSave, @NonNull Button buttonScanBarcode,
      @NonNull TextInputEditText editTextAmount, @NonNull TextInputEditText editTextBarcode,
      @NonNull TextInputEditText editTextCampaignPrice,
      @NonNull TextInputEditText editTextCampaignQuantity,
      @NonNull TextInputEditText editTextDepositAmount,
      @NonNull TextInputEditText editTextDescription, @NonNull TextInputEditText editTextPrice,
      @NonNull TextInputEditText editTextProductBrandName,
      @NonNull TextInputEditText editTextProductName, @NonNull LinearLayout layoutCampaignPrice,
      @NonNull LinearLayout layoutDeposit, @NonNull Spinner spinnerCategory,
      @NonNull Spinner spinnerUnit, @NonNull SwitchMaterial switchCampaignPrice,
      @NonNull SwitchMaterial switchDeposit) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonSave = buttonSave;
    this.buttonScanBarcode = buttonScanBarcode;
    this.editTextAmount = editTextAmount;
    this.editTextBarcode = editTextBarcode;
    this.editTextCampaignPrice = editTextCampaignPrice;
    this.editTextCampaignQuantity = editTextCampaignQuantity;
    this.editTextDepositAmount = editTextDepositAmount;
    this.editTextDescription = editTextDescription;
    this.editTextPrice = editTextPrice;
    this.editTextProductBrandName = editTextProductBrandName;
    this.editTextProductName = editTextProductName;
    this.layoutCampaignPrice = layoutCampaignPrice;
    this.layoutDeposit = layoutDeposit;
    this.spinnerCategory = spinnerCategory;
    this.spinnerUnit = spinnerUnit;
    this.switchCampaignPrice = switchCampaignPrice;
    this.switchDeposit = switchDeposit;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCancel;
      Button buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.buttonScanBarcode;
      Button buttonScanBarcode = ViewBindings.findChildViewById(rootView, id);
      if (buttonScanBarcode == null) {
        break missingId;
      }

      id = R.id.editTextAmount;
      TextInputEditText editTextAmount = ViewBindings.findChildViewById(rootView, id);
      if (editTextAmount == null) {
        break missingId;
      }

      id = R.id.editTextBarcode;
      TextInputEditText editTextBarcode = ViewBindings.findChildViewById(rootView, id);
      if (editTextBarcode == null) {
        break missingId;
      }

      id = R.id.editTextCampaignPrice;
      TextInputEditText editTextCampaignPrice = ViewBindings.findChildViewById(rootView, id);
      if (editTextCampaignPrice == null) {
        break missingId;
      }

      id = R.id.editTextCampaignQuantity;
      TextInputEditText editTextCampaignQuantity = ViewBindings.findChildViewById(rootView, id);
      if (editTextCampaignQuantity == null) {
        break missingId;
      }

      id = R.id.editTextDepositAmount;
      TextInputEditText editTextDepositAmount = ViewBindings.findChildViewById(rootView, id);
      if (editTextDepositAmount == null) {
        break missingId;
      }

      id = R.id.editTextDescription;
      TextInputEditText editTextDescription = ViewBindings.findChildViewById(rootView, id);
      if (editTextDescription == null) {
        break missingId;
      }

      id = R.id.editTextPrice;
      TextInputEditText editTextPrice = ViewBindings.findChildViewById(rootView, id);
      if (editTextPrice == null) {
        break missingId;
      }

      id = R.id.editTextProductBrandName;
      TextInputEditText editTextProductBrandName = ViewBindings.findChildViewById(rootView, id);
      if (editTextProductBrandName == null) {
        break missingId;
      }

      id = R.id.editTextProductName;
      TextInputEditText editTextProductName = ViewBindings.findChildViewById(rootView, id);
      if (editTextProductName == null) {
        break missingId;
      }

      id = R.id.layoutCampaignPrice;
      LinearLayout layoutCampaignPrice = ViewBindings.findChildViewById(rootView, id);
      if (layoutCampaignPrice == null) {
        break missingId;
      }

      id = R.id.layoutDeposit;
      LinearLayout layoutDeposit = ViewBindings.findChildViewById(rootView, id);
      if (layoutDeposit == null) {
        break missingId;
      }

      id = R.id.spinnerCategory;
      Spinner spinnerCategory = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCategory == null) {
        break missingId;
      }

      id = R.id.spinnerUnit;
      Spinner spinnerUnit = ViewBindings.findChildViewById(rootView, id);
      if (spinnerUnit == null) {
        break missingId;
      }

      id = R.id.switchCampaignPrice;
      SwitchMaterial switchCampaignPrice = ViewBindings.findChildViewById(rootView, id);
      if (switchCampaignPrice == null) {
        break missingId;
      }

      id = R.id.switchDeposit;
      SwitchMaterial switchDeposit = ViewBindings.findChildViewById(rootView, id);
      if (switchDeposit == null) {
        break missingId;
      }

      return new ActivityEditProductBinding((ScrollView) rootView, buttonCancel, buttonSave,
          buttonScanBarcode, editTextAmount, editTextBarcode, editTextCampaignPrice,
          editTextCampaignQuantity, editTextDepositAmount, editTextDescription, editTextPrice,
          editTextProductBrandName, editTextProductName, layoutCampaignPrice, layoutDeposit,
          spinnerCategory, spinnerUnit, switchCampaignPrice, switchDeposit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
